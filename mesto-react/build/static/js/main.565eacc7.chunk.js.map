{"version":3,"sources":["images/Vector.svg","components/Header.js","utils/api.js","components/Card.js","components/Main.js","components/Footer.js","components/PopupWithForm.js","components/ImagePopup.js","components/App.js","reportWebVitals.js","index.js"],"names":["Header","props","className","src","alt","api","options","this","_url","url","_headers","headers","fetch","then","res","ok","json","Promise","reject","status","newName","newAbout","method","body","JSON","stringify","name","about","image","link","cardId","imageUrl","avatar","authorization","Card","card","onClick","onCardClick","type","Main","React","useState","userName","setUserName","userDescription","setDescription","userAvatar","setAvatar","cards","setCards","useEffect","getUserInfo","data","catch","err","console","log","getInitialCards","onEditAvatar","onEditProfile","onAddPlace","map","_id","Footer","PopupWithForm","isOpen","title","children","onClose","noValidate","buttonName","ImagePopup","App","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditProfilePopupOpen","setIsEditProfilePopupOpen","selectedCard","setSelectedCard","closeAllPopups","logo","placeholder","maxLength","minLength","required","id","autoComplete","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.565eacc7.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Vector.bbe2a6ea.svg\";","function Header(props) {\r\n    return (\r\n    <header className=\"header\">\r\n        <div className=\"header__logo\" src={props.src} alt=\"Логотип Mesto Russia\"></div>\r\n    </header>\r\n    );\r\n}\r\nexport default Header;","class Api {\r\n  constructor(options) {\r\n      this._url = options.url;\r\n      this._headers = options.headers;\r\n  }\r\n\r\n  getInitialCards() {\r\n      return fetch(`${this._url}/cards`, {\r\n              headers: this._headers\r\n          })\r\n          .then(res => {\r\n              if (res.ok) {\r\n                  return res.json();\r\n              }\r\n              return Promise.reject(`Ошибка: ${res.status}`);\r\n          })\r\n  }\r\n\r\n  getUserInfo() {\r\n      return fetch(`${this._url}/users/me`, {\r\n              headers: this._headers\r\n          })\r\n          .then(res => {\r\n              if (res.ok) {\r\n                  return res.json();\r\n              }\r\n              return Promise.reject(`Ошибка: ${res.status}`);\r\n          })\r\n  }\r\n\r\n  setUserInfo(newName, newAbout) {\r\n      return fetch(`${this._url}/users/me`, {\r\n              method: 'PATCH',\r\n              headers: this._headers,\r\n              body: JSON.stringify({\r\n                  name: newName,\r\n                  about: newAbout\r\n              })\r\n          })\r\n          .then(res => {\r\n              if (res.ok) {\r\n                  return res.json();\r\n              }\r\n              return Promise.reject(`Ошибка: ${res.status}`);\r\n          })\r\n  }\r\n\r\n  addCard(name, image) {\r\n      return fetch(`${this._url}/cards`, {\r\n              method: 'POST',\r\n              headers: this._headers,\r\n              body: JSON.stringify({\r\n                  name: name,\r\n                  link: image\r\n              })\r\n\r\n          })\r\n          .then(res => {\r\n              if (res.ok) {\r\n                  return res.json();\r\n              }\r\n              return Promise.reject(`Ошибка: ${res.status}`);\r\n          })\r\n\r\n  }\r\n  deleteCard(cardId) {\r\n      return fetch(`${this._url}/cards/${cardId}`, {\r\n              method: 'DELETE',\r\n              headers: this._headers,\r\n\r\n          })\r\n          .then(res => {\r\n              if (res.ok) {\r\n                  return res.json();\r\n              }\r\n              return Promise.reject(`Ошибка: ${res.status}`);\r\n          })\r\n  }\r\n  updateAvatarImage(imageUrl) {\r\n      return fetch(`${this._url}/users/me/avatar`, {\r\n              method: 'PATCH',\r\n              headers: this._headers,\r\n              body: JSON.stringify({\r\n                  avatar: imageUrl\r\n              })\r\n          })\r\n          .then(res => {\r\n              if (res.ok) {\r\n                  return res.json();\r\n              }\r\n              return Promise.reject(`Ошибка: ${res.status}`);\r\n          })\r\n  }\r\n  addLike(cardId) {\r\n      return fetch(`${this._url}/cards/likes/${cardId}`, {\r\n              method: 'PUT',\r\n              headers: this._headers,\r\n\r\n          })\r\n          .then(res => {\r\n              if (res.ok) {\r\n                  return res.json();\r\n              }\r\n              return Promise.reject(`Ошибка: ${res.status}`);\r\n          })\r\n  }\r\n  removeLike(cardId) {\r\n      return fetch(`${this._url}/cards/likes/${cardId}`, {\r\n              method: 'DELETE',\r\n              headers: this._headers,\r\n\r\n          })\r\n          .then(res => {\r\n              if (res.ok) {\r\n                  return res.json();\r\n              }\r\n              return Promise.reject(`Ошибка: ${res.status}`);\r\n          })\r\n  }\r\n\r\n}\r\n\r\nconst api = new Api({\r\n    url: 'https://mesto.nomoreparties.co/v1/cohort-20',\r\n    headers: {\r\n      authorization: '525a9253-bff1-4ef9-85d2-df3d4a503fec',\r\n      'Content-Type': 'application/json'\r\n    }\r\n  });\r\n\r\n  export default api;\r\n","function Card(props) {\r\n\r\n    function handleClick() {\r\n        props.onCardClick(props.card);\r\n    }\r\n\r\n    return (\r\n        <template className=\"template\">\r\n            <div className=\"card\">\r\n                <img className=\"card__image\" src={props.card.link} alt={props.card.name} onClick={handleClick} />\r\n                <button className=\"card__delete\" type=\"button\"></button>\r\n                <div className=\"card__group\">\r\n                    <h3 className=\"card__text\">{props.card.name}</h3>\r\n                    <div className=\"card__like-container\">\r\n                        <button className=\"card__like\" type=\"button\"></button>\r\n                        <span className=\"card__like-counter\"></span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </template>\r\n    );\r\n}\r\nexport default Card;","import React from 'react'\r\nimport api from '../utils/api.js'\r\nimport Card from \"./Card.js\";\r\n\r\nfunction Main(props) {\r\n    const [userName, setUserName] = React.useState('');\r\n    const [userDescription, setDescription] = React.useState('');\r\n    const [userAvatar, setAvatar] = React.useState('');\r\n    const [cards, setCards] = React.useState([]);\r\n\r\n    React.useEffect(() => {\r\n        api.getUserInfo()\r\n            .then((data) => {\r\n                setUserName(data.name);\r\n                setDescription(data.about);\r\n                setAvatar(data.avatar);\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            })\r\n    }, [])\r\n\r\n    React.useEffect(() => {\r\n        api.getInitialCards()\r\n            .then((data) => {\r\n                setCards(data);\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            })\r\n    }, [])\r\n\r\n    return (\r\n        <main className=\"content\">\r\n            <section className=\"profile\">\r\n                <div className=\"profile__avatar-container\">\r\n                    <img className=\"profile__avatar\" src={userAvatar} alt=\"Фото профиля\" />\r\n                    <button className=\"profile__avatar-button\" onClick={props.onEditAvatar}></button>\r\n                </div>\r\n                <div className=\"info\">\r\n                    <h1 className=\"info__title\">{userName}</h1>\r\n                    <p className=\"info__subtitle\">{userDescription}</p>\r\n                    <button className=\"info__button\" type=\"button\" onClick={props.onEditProfile}></button>\r\n                </div>\r\n                <button className=\"profile__add-button\" type=\"button\" onClick={props.onAddPlace}></button>\r\n            </section>\r\n            <section className=\"cards\">\r\n                {cards.map((card) => (\r\n                    <Card card={card} key={card._id} onCardClick={props.onCardClick} />\r\n                    ))}\r\n            </section>\r\n        </main>\r\n    );\r\n}\r\nexport default Main;\r\n\r\n\r\n","function Footer() {\r\n    return (\r\n        <footer className=\"footer\">\r\n            <p className=\"footer__copyright\">© 2020 Mesto Russia</p>\r\n        </footer>\r\n    );\r\n}\r\nexport default Footer;\r\n","function PopupWithForm(props) {\r\n    return (\r\n        <div className={`popup popup_${props.name} ${props.isOpen ? 'popup_visible' : ''}`}>\r\n            <div className={`popup__window popup__window_${props.name}`}>\r\n                <h2 className={`popup__title`}>{props.title}</h2>\r\n                {props.children}\r\n                <button className={`popup__close-button popup__close-button_${props.name}`} onClick={props.onClose}></button>\r\n                <form className={`popup__form popup__form_${props.name}`} name={`${props.name}`} noValidate>\r\n                        <button className={`popup__button popup__button_${props.name}`} type=\"submit\">{props.buttonName}</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default PopupWithForm;","function ImagePopup(props) {\r\n    return (\r\n        <div className={`popup popup_full ${props.card ? 'popup_visible' : ''}`}>\r\n            <div className=\"popup__full-group\">\r\n                <img className=\"popup__full-image\" src={props.card.link} alt={props.card.name}/>\r\n                    <button type=\"button\" className=\"popup__close-button popup__close-button_full\" onClick={props.onClose}></button>\r\n                    <p className=\"popup__full-text\">{props.card.name}</p>\r\n            </div>\r\n        </div>\r\n      );\r\n  }\r\n  export default ImagePopup;","import React from 'react'\nimport logo from '../images/Vector.svg'\nimport Header from './Header.js'\nimport Main from './Main.js'\nimport Footer from './Footer.js'\nimport PopupWithForm from './PopupWithForm.js'\nimport ImagePopup from './ImagePopup.js'\nimport '../index.css'\n\nfunction App() {\n\n    const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n    const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n    const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n    const [selectedCard, setSelectedCard] = React.useState(false);\n\n    function handleCardClick(card) {\n        setSelectedCard(card);\n    }\n    function handleEditAvatarClick() {\n        setIsEditAvatarPopupOpen(true);\n    }\n    function handleEditProfileClick() {\n        setIsEditProfilePopupOpen(true);\n    }\n    function handleAddPlaceClick() {\n        setIsAddPlacePopupOpen(true);\n    }\n\n    function closeAllPopups() {\n        setIsEditAvatarPopupOpen(false);\n        setIsEditProfilePopupOpen(false);\n        setIsAddPlacePopupOpen(false);\n        setSelectedCard(false);\n    }\n    return (\n    <div className=\"body\">\n        <div className=\"page\">\n            <Header src={logo}/>\n            <Main onCardClick={handleCardClick} onEditProfile={handleEditProfileClick} onEditAvatar={handleEditAvatarClick} onAddPlace={handleAddPlaceClick}/>\n            <Footer />\n        </div>\n        <PopupWithForm name=\"profileEdit\" title=\"Редактировать профиль\" buttonName=\"Сохранить\" isOpen={isEditProfilePopupOpen} onClose={closeAllPopups}>\n        <form className=\"popup__form\" name=\"infoForm\">\n                <input \n                name=\"infoTitle\"\n                type=\"text\" \n                className=\"popup__input\" \n                placeholder=\"Имя\" \n                maxLength=\"40\" \n                minLength=\"2\"\n                required  \n                id=\"name\" \n                autoComplete=\"off\"/>\n\n                <span id=\"name-error\" className=\"error\"></span>\n\n                <input \n                name=\"infoSubtitle\" \n                type=\"text\" \n                className=\"popup__input\" \n                placeholder=\"О себе\" \n                maxLength=\"200\"\n                minLength=\"2\" \n                required \n                id=\"about\" \n                autoComplete=\"off\"/>\n\n                <span id=\"about-error\" className=\"error\"></span>\n            </form>       \n        </PopupWithForm>\n        <PopupWithForm name=\"cardEdit\" title=\"Новое место\" buttonName=\"Создать\" isOpen={isAddPlacePopupOpen} onClose={closeAllPopups}>\n        <form name=\"cardForm\" className=\"popup__form popup__form_card\">\n                <input \n                name=\"cardName\" \n                type=\"text\" \n                className=\"popup__input popup__input_card\" \n                placeholder=\"Название\"\n                maxLength=\"30\" \n                minLength=\"2\" \n                required \n                id=\"text\" \n                autoComplete=\"off\"/>\n\n                <span id=\"text-error\" className=\"error\"></span>\n\n                <input \n                name=\"cardLink\" \n                type=\"url\" \n                className=\"popup__input popup__input_card\"\n                placeholder=\"Ссылка на картинку\" \n                required \n                id=\"url-card\" \n                autoComplete=\"off\"/>\n\n                <span id=\"url-card-error\" className=\"error\"></span>\n            </form>\n        </PopupWithForm>\n        <PopupWithForm name=\"avatarEdit\" title=\"Обновить аватар\" buttonName=\"Сохранить\" isOpen={isEditAvatarPopupOpen} onClose={closeAllPopups}>\n        <form name=\"avatarForm\" className=\"popup__form popup__form_avatar\">\n                <input\n                name=\"avatar\"\n                type=\"url\"\n                className=\"popup__input popup__input_avatar\"\n                placeholder=\"Ссылка на картинку\"\n                required\n                id=\"url-avatar\"\n                autoComplete=\"off\"/>\n        \n                <span id=\"url-avatar-error\" className=\"error\"></span>\n            </form>\n        </PopupWithForm>\n        <PopupWithForm name=\"cardDelete\" title=\"Вы уверены?\" buttonName=\"Да\" />\n        <ImagePopup card={selectedCard} onClose={closeAllPopups} />\n    </div>\n    );\n}\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App.js';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}