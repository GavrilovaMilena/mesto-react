{"ast":null,"code":"import _classCallCheck from\"C:/Users/milka/mesto-react/mesto-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"C:/Users/milka/mesto-react/mesto-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";var Api=/*#__PURE__*/function(){function Api(options){_classCallCheck(this,Api);this._url=options.url;this._headers=options.headers;}_createClass(Api,[{key:\"getInitialCards\",value:function getInitialCards(){return fetch(\"\".concat(this._url,\"/cards\"),{headers:this._headers}).then(function(res){if(res.ok){return res.json();}return Promise.reject(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \".concat(res.status));});}},{key:\"getUserInfo\",value:function getUserInfo(){return fetch(\"\".concat(this._url,\"/users/me\"),{headers:this._headers}).then(function(res){if(res.ok){return res.json();}return Promise.reject(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \".concat(res.status));});}},{key:\"setUserInfo\",value:function setUserInfo(newName,newAbout){return fetch(\"\".concat(this._url,\"/users/me\"),{method:'PATCH',headers:this._headers,body:JSON.stringify({name:newName,about:newAbout})}).then(function(res){if(res.ok){return res.json();}return Promise.reject(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \".concat(res.status));});}},{key:\"addCard\",value:function addCard(name,image){return fetch(\"\".concat(this._url,\"/cards\"),{method:'POST',headers:this._headers,body:JSON.stringify({name:name,link:image})}).then(function(res){if(res.ok){return res.json();}return Promise.reject(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \".concat(res.status));});}},{key:\"deleteCard\",value:function deleteCard(cardId){return fetch(\"\".concat(this._url,\"/cards/\").concat(cardId),{method:'DELETE',headers:this._headers}).then(function(res){if(res.ok){return res.json();}return Promise.reject(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \".concat(res.status));});}},{key:\"updateAvatarImage\",value:function updateAvatarImage(imageUrl){return fetch(\"\".concat(this._url,\"/users/me/avatar\"),{method:'PATCH',headers:this._headers,body:JSON.stringify({avatar:imageUrl})}).then(function(res){if(res.ok){return res.json();}return Promise.reject(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \".concat(res.status));});}},{key:\"addLike\",value:function addLike(cardId){return fetch(\"\".concat(this._url,\"/cards/likes/\").concat(cardId),{method:'PUT',headers:this._headers}).then(function(res){if(res.ok){return res.json();}return Promise.reject(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \".concat(res.status));});}},{key:\"removeLike\",value:function removeLike(cardId){return fetch(\"\".concat(this._url,\"/cards/likes/\").concat(cardId),{method:'DELETE',headers:this._headers}).then(function(res){if(res.ok){return res.json();}return Promise.reject(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \".concat(res.status));});}},{key:\"initData\",value:function initData(){return Promise.all([this.getInitialCards(),this.getUserInfo()]);}}]);return Api;}();export{Api as default};","map":{"version":3,"sources":["C:/Users/milka/mesto-react/mesto-react/src/utils/Api.js"],"names":["Api","options","_url","url","_headers","headers","fetch","then","res","ok","json","Promise","reject","status","newName","newAbout","method","body","JSON","stringify","name","about","image","link","cardId","imageUrl","avatar","all","getInitialCards","getUserInfo"],"mappings":"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","sourcesContent":["export default class Api {\r\n  constructor(options) {\r\n      this._url = options.url;\r\n      this._headers = options.headers;\r\n  }\r\n\r\n  getInitialCards() {\r\n      return fetch(`${this._url}/cards`, {\r\n              headers: this._headers\r\n          })\r\n          .then(res => {\r\n              if (res.ok) {\r\n                  return res.json();\r\n              }\r\n              return Promise.reject(`Ошибка: ${res.status}`);\r\n          })\r\n  }\r\n\r\n  getUserInfo() {\r\n      return fetch(`${this._url}/users/me`, {\r\n              headers: this._headers\r\n          })\r\n          .then(res => {\r\n              if (res.ok) {\r\n                  return res.json();\r\n              }\r\n              return Promise.reject(`Ошибка: ${res.status}`);\r\n          })\r\n  }\r\n\r\n  setUserInfo(newName, newAbout) {\r\n      return fetch(`${this._url}/users/me`, {\r\n              method: 'PATCH',\r\n              headers: this._headers,\r\n              body: JSON.stringify({\r\n                  name: newName,\r\n                  about: newAbout\r\n              })\r\n          })\r\n          .then(res => {\r\n              if (res.ok) {\r\n                  return res.json();\r\n              }\r\n              return Promise.reject(`Ошибка: ${res.status}`);\r\n          })\r\n  }\r\n\r\n  addCard(name, image) {\r\n      return fetch(`${this._url}/cards`, {\r\n              method: 'POST',\r\n              headers: this._headers,\r\n              body: JSON.stringify({\r\n                  name: name,\r\n                  link: image\r\n              })\r\n\r\n          })\r\n          .then(res => {\r\n              if (res.ok) {\r\n                  return res.json();\r\n              }\r\n              return Promise.reject(`Ошибка: ${res.status}`);\r\n          })\r\n\r\n  }\r\n  deleteCard(cardId) {\r\n      return fetch(`${this._url}/cards/${cardId}`, {\r\n              method: 'DELETE',\r\n              headers: this._headers,\r\n\r\n          })\r\n          .then(res => {\r\n              if (res.ok) {\r\n                  return res.json();\r\n              }\r\n              return Promise.reject(`Ошибка: ${res.status}`);\r\n          })\r\n  }\r\n  updateAvatarImage(imageUrl) {\r\n      return fetch(`${this._url}/users/me/avatar`, {\r\n              method: 'PATCH',\r\n              headers: this._headers,\r\n              body: JSON.stringify({\r\n                  avatar: imageUrl\r\n              })\r\n          })\r\n          .then(res => {\r\n              if (res.ok) {\r\n                  return res.json();\r\n              }\r\n              return Promise.reject(`Ошибка: ${res.status}`);\r\n          })\r\n  }\r\n  addLike(cardId) {\r\n      return fetch(`${this._url}/cards/likes/${cardId}`, {\r\n              method: 'PUT',\r\n              headers: this._headers,\r\n\r\n          })\r\n          .then(res => {\r\n              if (res.ok) {\r\n                  return res.json();\r\n              }\r\n              return Promise.reject(`Ошибка: ${res.status}`);\r\n          })\r\n  }\r\n  removeLike(cardId) {\r\n      return fetch(`${this._url}/cards/likes/${cardId}`, {\r\n              method: 'DELETE',\r\n              headers: this._headers,\r\n\r\n          })\r\n          .then(res => {\r\n              if (res.ok) {\r\n                  return res.json();\r\n              }\r\n              return Promise.reject(`Ошибка: ${res.status}`);\r\n          })\r\n  }\r\n\r\n  initData() {\r\n    return Promise.all([this.getInitialCards(), this.getUserInfo()]);\r\n  }\r\n\r\n}"]},"metadata":{},"sourceType":"module"}